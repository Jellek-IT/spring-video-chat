spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/springchat
    username: springchat
    password: password
  data:
    redis:
      host: localhost
      port: 6379
      password: password
  kafka:
    bootstrap-servers: 127.0.0.1:29092
    properties:
      security.protocol: PLAINTEXT
      sasl.mechanism:
      sasl.jaas.config:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/local
  mail:
    sender: platform@example.com
    host: localhost
    port: 1025
  jpa.properties.hibernate.format_sql: true

server:
  port: 8080

app:
  id: local
  client:
    keycloak:
      client-id: springchat-backendmain
      client-secret: <change-me>
      server-url: http://localhost:8090
      realm: local
    stomp-broker:
      enabled: true
      relay-host: localhost
      relay-port: 61613
      client-login: admin
      client-passcode: password
    s3:
      access-key: <change-me>
      secret-key: <change-me>
      endpoint: http://localhost:9000
      bucket: springchat-backendmain
      region: aws-global
    janus:
      ws-host: ws://localhost:8188
      token-auth-secret: secret
      video-room-admin-key: secret

org.springframework.orm.jpa: DEBUG
logging:
  level:
    pl.bronikowski.springchat.backendmain: TRACE
    org:
      hibernate.SQL: DEBUG
      hibernate.type: TRACE
      hibernate.type.descriptor.sql.BasicBinder: TRACE
      springframework.security: TRACE
      springframework.transaction.interceptor: TRACE
      hibernate.orm.query: WARN